- name: initial setup
  hosts: new_host
  become: true

  vars_prompt:
    - name: new_ip
      prompt: Какой IP будет у этой машины
      private: no
    - name: new_nom
      prompt: Как будет называться машина
      private: no

  tasks:
    - name: update and upgrade
      ansible.builtin.shell:
        cmd: apt-get update

    - name: additional packages
      ansible.builtin.shell:
        cmd: apt-get -y install vim-console

    # Установка k8s https://www.altlinux.org/Kubernetes
    - name: install k8s packages
      ansible.builtin.shell:
        cmd: apt-get -y install kubernetes-kubeadm kubernetes-kubelet kubernetes-crio cri-tools

    - name: prepare k8s
      ansible.builtin.shell:
        cmd: |
          rm -f /etc/cni/net.d/100-crio-bridge.conf /etc/cni/net.d/200-loopback.conf
          ln -s /opt/cni/bin/flannel /usr/libexec/cni/flannel
          sed -i -E /etc/systemd/system/kubelet.service.d/kubeadm.conf 's/--node-ip=([0-9]{1,3}.?){4}/--node-ip=192.168.59.{{ new_ip }}/'
          systemctl enable --now crio kubelet

    - name: disable swap
      ansible.builtin.shell:
        cmd: |
          swapoff -a
          sed -i '/swap/d' /etc/fstab

    - name: additional setup
      ansible.builtin.shell:
        cmd: |
          hostnamectl set-hostname kube-{{ new_nom }}
          echo "192.168.59.{{ new_ip }}/24" > /etc/net/ifaces/enp0s8/ipv4address

    - name: make direcotry
      file:
        path: "/home/root/.ssh"
        state: directory

    - name: make direcotry
      file:
        path: "/home/huvalk/.ssh"
        state: directory

    - name: put pubkey
      ansible.builtin.copy:
        dest: "/home/root/.ssh/authorized_keys"
        src: "/home/huvalk/.ssh/id_rsa.pub"
        owner: root
        group: root

    - name: put pubkey
      ansible.builtin.copy:
        dest: "/home/huvalk/.ssh/authorized_keys"
        src: "/home/huvalk/.ssh/id_rsa.pub"
        owner: huvalk
        group: huvalk

    - name: finish
      ansible.builtin.debug:
        msg: Перезагрузите хост
